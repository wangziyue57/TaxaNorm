collapse = TRUE,
comment = "#>"
)
data("TaxNorm_Example_Input", package = "TaxNorm")
TaxNorm_QC_Input(TaxNorm_Example_Input)
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_QC_Input(TaxNorm_Example_Input)
qc_data <- TaxNorm_QC_Input(TaxNorm_Example_Input)
View(qc_data)
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
qc_data <- TaxNorm_QC_Input(TaxNorm_Example_Input)
#Pick group from phyloseq object
group <- sample_data(TaxNorm_Example_Input)$body_site
#Run Normalization function
Normalized_Data <- TaxNorm_Normalization(data = TaxNorm_Example_Input,
depth = NULL,
group = group,
filter.sample.num = 1,
filter.taxa.count = 0,
random = TRUE,
ncores = 1)
View(Normalized_Data)
TaxNorm_Model_QC(Normalized_Data)
TaxNorm_Model_QC(TaxNormResults = Normalized_Data)
TaxNormResults = Normalized_Data
mymodelpars <- model_pars(TaxNormResults)
mycoefs <- coefficients(mymodelpars)
myinput_data <- input_data(TaxNormResults)
mytab <- table(tax_table(myinput_data)[, "Phylum"], exclude = NULL)
myphy <- names(mytab)[-length(mytab)]
coef_depth <- list()
for(i in 1:(length(mytab)-1)){
coef_depth[[i]] <- mycoefs[taxa_names(subset_taxa(myinput_data, Phylum==myphy[i])),2]
}
TaxNorm_Model_QC()
TaxNorm_Model_QC
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_Model_QC(TaxNormResults = Normalized_Data)
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_Model_QC(TaxNormResults = Normalized_Data)
rm(myphy)
TaxNorm_Model_QC(TaxNormResults = Normalized_Data)
mymodelpars <- model_pars(TaxNormResults)
mycoefs <- coefficients(mymodelpars)
myinput_data <- input_data(TaxNormResults)
mytab <- table(tax_table(myinput_data)[, "Phylum"], exclude = NULL)
myphy <- names(mytab)[-length(mytab)]
coef_depth <- list()
for(i in 1:(length(mytab)-1)){
coef_depth[[i]] <- mycoefs[taxa_names(subset_taxa(myinput_data, Phylum==myphy[i])),2]
}
names(coef_depth) <- myphy
View(coef_depth)
plotdata <- data.frame(matrix(ncol = 2,nrow = 0))
names(plotdata) <- c("Phylum","Phy")
for(i in seq_along(coef_depth)){
curr_data <- coef_depth[i]
curr_data <- as.data.frame(curr_data)
curr_data$Phy <- myphy[i]
names(curr_data) <- c("Value","Phylum")
plotdata <- rbind(plotdata,curr_data)
}
mean_coef_plot <- ggplot(plotdata, aes(x=Value, color=Phylum)) +
geom_density() +
scale_color_brewer(palette = "Dark2") +
labs(x = "Slope for Sequencing Depth") +
theme_classic()
mean_coef_plot
coef_zero <- list()
for(i in 1:(length(mytab)-1)){
coef_zero[[i]] <- mycoefs[taxa_names(subset_taxa(myinput_data, Phylum==myphy[i])),8]
}
names(coef_zero) <- myphy
plotdata <- data.frame(matrix(ncol = 2,nrow = 0))
names(plotdata) <- c("Phylum","Phy")
for(i in seq_along(coef_zero)){
curr_data <- coef_zero[i]
curr_data <- as.data.frame(curr_data)
curr_data$Phy <- myphy[i]
names(curr_data) <- c("Value","Phylum")
plotdata <- rbind(plotdata,curr_data)
}
zero_coef_plot <- ggplot(plotdata, aes(x=Value, color=Phylum)) +
geom_density() +
scale_color_brewer(palette = "Dark2") +
labs(x = "Slope for Sequencing Depth") +
theme_classic()
zero_coef_plot
coef_disb <- list()
for(i in 1:(length(mytab)-1)){
coef_disb[[i]] <- mycoefs[taxa_names(subset_taxa(myinput_data, Phylum==myphy[i])),10]
}
names(coef_disb) <- myphy
plotdata <- data.frame(matrix(ncol = 2,nrow = 0))
names(plotdata) <- c("Phylum","Phy")
for(i in seq_along(coef_disb)){
curr_data <- coef_disb[i]
curr_data <- as.data.frame(curr_data)
curr_data$Phy <- myphy[i]
names(curr_data) <- c("Value","Phylum")
plotdata <- rbind(plotdata,curr_data)
}
disb_coef_plot <- ggplot(plotdata, aes(x=Value, color=Phylum)) +
geom_density() +
scale_color_brewer(palette = "Dark2") +
labs(x = "Slope for Sequencing Depth") +
theme_classic()
disb_coef_plot
data("TaxNorm_Example_Output", package = "TaxNorm")
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
str(input_data(TaxNormResults))
str(input_data(TaxNorm_Example_Output))
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
library(TaxNorm)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
?eval
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
View(TaxNorm_Example_Output)
TaxNorm_Example_Output@input_data
library(TaxNorm)
TaxNorm_Model_QC
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
TaxNormResults = TaxNorm_Example_Output
mymodelpars <- model_pars(TaxNormResults)
mycoefs <- coefficients(mymodelpars)
myinput_data <- input_data(TaxNormResults)
mytab <- table(tax_table(myinput_data)[, "Phylum"], exclude = NULL)
myphy <- names(mytab)[-length(mytab)]
coef_depth <- list()
print(myphy)
for(i in 1:(length(mytab)-1)){
print(i)
coef_depth[[i]] <- mycoefs[taxa_names(physeq = subset_taxa(physeq = myinput_data, Phylum == deparse(myphy[i]))),2]
}
for(i in 1:(length(mytab)-1)){
print(i)
coef_depth[[i]] <- mycoefs[taxa_names(physeq = subset_taxa(physeq = myinput_data, Phylum == myphy[i])),2]
}
sample_names(myinput_data)
taxa_names(myinput_data)
?taxa_names
View(myinput_data)
myinput_data@tax_table
mymodelpars <- model_pars(TaxNormResults)
mycoefs <- coefficients(mymodelpars)
myinput_data <- input_data(TaxNormResults)
mytab <- table(tax_table(myinput_data)[, "Phylum"], exclude = NULL)
myphy <- names(mytab)[-length(mytab)]
coef_depth <- list()
print(myphy)
for(i in 1:(length(mytab)-1)){
print(i)
coef_depth[[i]] <- mycoefs[taxa_names(physeq = subset_taxa(physeq = myinput_data, Phylum == myphy[i])),2]
}
View(coef_depth)
View(mycoefs)
taxa_names(physeq = subset_taxa(physeq = myinput_data, Phylum == myphy[i]))
View(coef_depth)
coef_depth[[1]]
subset_taxa(physeq = myinput_data, Phylum == myphy[i])
taxa_names(myinput_data)
?subset_taxa
subset_taxa(myinput_data,Phylum == myphy[i])
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
data("TaxNorm_Example_Output", package = "TaxNorm")
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
mymodelpars <- model_pars(TaxNormResults)
mycoefs <- coefficients(mymodelpars)
myinput_data <- input_data(TaxNormResults)
mytab <- table(tax_table(myinput_data)[, "Phylum"], exclude = NULL)
myphy <- names(mytab)[-length(mytab)]
coef_depth <- list()
print(myphy)
TaxNormResults <= TaxNorm_Example_Output
TaxNormResults = TaxNorm_Example_Output
mymodelpars <- model_pars(TaxNormResults)
mycoefs <- coefficients(mymodelpars)
myinput_data <- input_data(TaxNormResults)
mytab <- table(tax_table(myinput_data)[, "Phylum"], exclude = NULL)
myphy <- names(mytab)[-length(mytab)]
coef_depth <- list()
print(myphy)
for(i in 1:(length(mytab)-1)){
print(i)
sub_phy <- subset_taxa(myinput_data,Phylum == myphy[i])
coef_depth[[i]] <- mycoefs[taxa_names(physeq = sub_phy),2]
}
prune_taxa(myphy[i],myinput_data)
View(myinput_data)
myinput_data@otu_table
prune_data <- prune_taxa(myphy[i],myinput_data)
View(myinput_data)
prune_data <- prune_taxa(myphy,myinput_data)
View(mycoefs)
mytab
tax_table(myinput_data)
tax_table(myinput_data)[, "Phylum"]
mytaxa <- tax_table(myinput_data)[, "Phylum"]
mytaxa <- as.data.frame(tax_table(myinput_data)[, "Phylum"])
View(mytaxa)
myphy <- names(mytab)[-length(mytab)]
myphy
mycoefs <- cbind(mycoefs,mytaxa)
View(mycoefs)
coef_depth[[i]] <- mycoefs[Phylum == myphy[i]]
coef_depth[[i]] <- mycoefs['Phylum' == myphy[i]]
View(coef_depth)
coef_depth <- list()
mycoefs <- cbind(mycoefs,mytaxa)
mymodelpars <- model_pars(TaxNormResults)
mycoefs <- coefficients(mymodelpars)
myinput_data <- input_data(TaxNormResults)
mytab <- table(tax_table(myinput_data)[, "Phylum"], exclude = NULL)
mytaxa <- as.data.frame(tax_table(myinput_data)[, "Phylum"])
myphy <- names(mytab)[-length(mytab)]
coef_depth <- list()
mycoefs <- cbind(mycoefs,mytaxa)
View(mycoefs)
coef_depth[[i]] <- mycoefs['Phylum' == myphy[i]]
View(coef_depth)
i=1
coef_depth <- list()
coef_depth[[i]] <- mycoefs['Phylum' == myphy[i]]
View(coef_depth)
View(coef_depth[[1]])
coef_depth <- list()
coef_depth[[i]] <- mycoefs[which('Phylum' == myphy[i])]
View(coef_depth)
myphy[i]
mycoefs[which(mycoefs$Phylum == myphy[i])]
names(mycoefs)
mycoefs$Phylum
coef_depth[[i]] <- mycoefs[which(mycoefs$Phylum == myphy[i])]
coef_depth[[i]] <- mycoefs[which(mycoefs$Phylum == myphy[i]),]
View(coef_depth)
View(coef_depth[[1]])
mymodelpars <- model_pars(TaxNormResults)
mycoefs <- coefficients(mymodelpars)
myinput_data <- input_data(TaxNormResults)
mytab <- table(tax_table(myinput_data)[, "Phylum"], exclude = NULL)
mytaxa <- as.data.frame(tax_table(myinput_data)[, "Phylum"])
myphy <- names(mytab)[-length(mytab)]
mycoefs <- cbind(mycoefs,mytaxa)
coef_depth <- list()
for(i in 1:(length(mytab)-1)){
coef_depth[[i]] <- mycoefs[which(mycoefs$Phylum == myphy[i]),]
}
names(coef_depth) <- myphy
View(coef_depth)
coef_zero <- list()
for(i in 1:(length(mytab)-1)){
coef_zero[[i]] <- mycoefs[taxa_names(physeq = subset_taxa(myinput_data, Phylum==myphy[i])),8]
}
View(coef_zero)
View(coef_depth[["Actinobacteria"]])
View(coef_depth[[1]])
mymodelpars <- model_pars(TaxNormResults)
mycoefs <- coefficients(mymodelpars)
myinput_data <- input_data(TaxNormResults)
mytab <- table(tax_table(myinput_data)[, "Phylum"], exclude = NULL)
mytaxa <- as.data.frame(tax_table(myinput_data)[, "Phylum"])
myphy <- names(mytab)[-length(mytab)]
mycoefs <- cbind(mycoefs,mytaxa)
coef_depth <- list()
for(i in 1:(length(mytab)-1)){
coef_depth[[i]] <- mycoefs[which(mycoefs$Phylum == myphy[i]),2]
}
View(coef_depth)
names(coef_depth) <- myphy
mymodelpars <- model_pars(TaxNormResults)
mycoefs <- coefficients(mymodelpars)
myinput_data <- input_data(TaxNormResults)
mytab <- table(tax_table(myinput_data)[, "Phylum"], exclude = NULL)
mytaxa <- as.data.frame(tax_table(myinput_data)[, "Phylum"])
myphy <- names(mytab)[-length(mytab)]
mycoefs <- cbind(mycoefs,mytaxa)
coef_depth <- list()
for(i in 1:(length(mytab)-1)){
coef_depth[[i]] <- mycoefs[which(mycoefs$Phylum == myphy[i]),2]
}
names(coef_depth) <- myphy
plotdata <- data.frame(matrix(ncol = 2,nrow = 0))
names(plotdata) <- c("Phylum","Phy")
for(i in seq_along(coef_depth)){
curr_data <- coef_depth[i]
curr_data <- as.data.frame(curr_data)
curr_data$Phy <- myphy[i]
names(curr_data) <- c("Value","Phylum")
plotdata <- rbind(plotdata,curr_data)
}
mean_coef_plot <- ggplot(plotdata, aes(x=Value, color=Phylum)) +
geom_density() +
scale_color_brewer(palette = "Dark2") +
labs(x = "Slope for Sequencing Depth") +
theme_classic()
mean_coef_plot
coef_zero <- list()
for(i in 1:(length(mytab)-1)){
coef_zero[[i]] <- mycoefs[which(mycoefs$Phylum == myphy[i]),8]
}
names(coef_zero) <- myphy
plotdata <- data.frame(matrix(ncol = 2,nrow = 0))
names(plotdata) <- c("Phylum","Phy")
for(i in seq_along(coef_zero)){
curr_data <- coef_zero[i]
curr_data <- as.data.frame(curr_data)
curr_data$Phy <- myphy[i]
names(curr_data) <- c("Value","Phylum")
plotdata <- rbind(plotdata,curr_data)
}
zero_coef_plot <- ggplot(plotdata, aes(x=Value, color=Phylum)) +
geom_density() +
scale_color_brewer(palette = "Dark2") +
labs(x = "Slope for Sequencing Depth") +
theme_classic()
zero_coef_plot
coef_disb <- list()
for(i in 1:(length(mytab)-1)){
coef_disb[[i]] <- mycoefs[which(mycoefs$Phylum == myphy[i]),10]
}
names(coef_disb) <- myphy
plotdata <- data.frame(matrix(ncol = 2,nrow = 0))
names(plotdata) <- c("Phylum","Phy")
for(i in seq_along(coef_disb)){
curr_data <- coef_disb[i]
curr_data <- as.data.frame(curr_data)
curr_data$Phy <- myphy[i]
names(curr_data) <- c("Value","Phylum")
plotdata <- rbind(plotdata,curr_data)
}
disb_coef_plot <- ggplot(plotdata, aes(x=Value, color=Phylum)) +
geom_density() +
scale_color_brewer(palette = "Dark2") +
labs(x = "Slope for Sequencing Depth") +
theme_classic()
disb_coef_plot
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
data("TaxNorm_Example_Output", package = "TaxNorm")
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
TaxNormResults <- TaxNorm_Example_Output
mymodelpars <- model_pars(TaxNormResults)
mycoefs <- coefficients(mymodelpars)
myinput_data <- input_data(TaxNormResults)
mytab <- table(tax_table(myinput_data)[, "Phylum"], exclude = NULL)
mytaxa <- as.data.frame(tax_table(myinput_data)[, "Phylum"])
myphy <- names(mytab)[-length(mytab)]
mycoefs <- cbind(mycoefs,mytaxa)
coef_depth <- list()
coef_zero <- list()
for(i in 1:(length(mytab)-1)){
coef_zero[[i]] <- mycoefs[which(mycoefs$Phylum == myphy[i]),8]
}
names(coef_zero) <- myphy
coef_zero
plotdata <- data.frame(matrix(ncol = 2,nrow = 0))
names(plotdata) <- c("Phylum","Phy")
for(i in seq_along(coef_zero)){
curr_data <- coef_zero[i]
curr_data <- as.data.frame(curr_data)
curr_data$Phy <- myphy[i]
names(curr_data) <- c("Value","Phylum")
plotdata <- rbind(plotdata,curr_data)
}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
data("TaxNorm_Example_Output", package = "TaxNorm")
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
library(phyloseq)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
library(ggplot2)
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
data("TaxNorm_Example_Output", package = "TaxNorm")
TaxNorm_Model_QC(TaxNormResults = TaxNorm_Example_Output)
library(vegan)
#Pick group from phyloseq object
group <- sample_data(TaxNorm_Example_Input)$body_site
data("TaxNorm_Example_Input", package = "TaxNorm")
#Pick group from phyloseq object
group <- sample_data(TaxNorm_Example_Input)$body_site
TaxNorm_NMDS(TaxNorm_Example_Output, group = group)
TaxNormResults = TaxNorm_Example_Output
mynorm <- normdata(TaxNormResults)
mydata <- input_data(TaxNormResults)
normdata <- mynorm + abs(min(mynorm, na.rm = T))
dist <- vegan::vegdist(t(normdata), method="bray", na.rm = T)
fit <- vegan::metaMDS(dist, k=2)
norm_NMDS <- data.frame(fit$points, sample_data(mydata))
p <- ggplot(norm_NMDS) +
geom_point(aes_string('MDS1', 'MDS2', color = group)) +
stat_ellipse(aes_string('MDS1', 'MDS2', color = group)) +
theme_classic()
View(norm_NMDS)
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
TaxNorm_NMDS(TaxNorm_Example_Output, group = "body_site")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
devtools::check(TaxNorm)
install.packages("tidyverse")
install.packages("roxygen2")
install.packages("vegan")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("microbiome")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("S4Vectors")
install.packages("toxpiR")
library(TaxNorm)
library(TaxNorm)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(TaxNorm)
library(TaxNorm)
library(TaxNorm)
knitr::opts_chunk$set(echo = TRUE)
library(TaxNorm)
library(phyloseq)
library(microbiome)
data("TaxNorm_Example_Output", package = "TaxNorm")
TaxNorm_Model_QC(TaxNorm_Example_Output)
library(TaxNorm)
install.packages("tinytex")
library(tinytex)
tinytex::install_tinytex()
library(TaxNorm)
